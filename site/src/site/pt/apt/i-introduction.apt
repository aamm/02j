i. Introdução

* Java é....

  Certo, nosso site não pretende ser autossuficiente. Mas não faz mal se definirmos o que é Java. Em outras palavras, o que nós planejamos estudar. Então aí vai:

  Java é uma linguagem de programação. Há milhares de formas de definir uma linguagem de programação. A seguir temos algumas formas que se aplicam ao Java:

  Java é uma linguagem de programação orientada a objeto (a siglas em inglês é OOP que significa Object-oriented programming). Este é um conceito um pouco abstrato para um iniciante, mas de forma simples nós podemos dizer que um objeto é um grupo de dados organizados de forma que permite usar classificadores. Pense em um classificador como um conjunto. Por exemplo, se nós pensarmos sobre um conjunto chamado “países”, os elementos dos países serão objetos. Cada objeto terá certas propriedades tais como nome da capital e a área. OOP nos permite organizar os dados dessa forma.

  Java é uma linguagem com propósito geral – nós podemos fazer qualquer coisa em Java. De uma página web, a um jogo de computador, a uma aplicação de celular. Certas linguagens foram desenhadas para ter propósito geral. Por exemplo, linguagens query como SQL foram desenhadas originalmente para nos permitir buscar e organizar dados em bancos de dados. Tal linguagem não é desenhada para criar outras coisas.

  Java é baseada em uma máquina virtual. Primeiramente, o que é uma máquina virtual? Nós todos sabemos que programas são executados por alguma coisa. Enquanto a forma clássica de executar um programa é ter um hardware executando um programa, nós também podemos ter um hardware executando um programa que executa outro programa. Isso soa uma pouco estranho a princípio, mas há um número de vantagens em fazer isso. A principal vantagem é que o programa intermediário, a máquina virtual, pode isolar o pprograma Java do hardware. Então o mesmo programa Java pode rodar em vários tipos de hardware, desde que haja uma máquina virtual para o hardware.

  Java is an imperative programming language - In other words, when you write a program in Java you are telling the computer to do this, and to do that. Non-imperative programming languages can simply declare what you want and let the computer figure out how to get that done.

* Simple Facts About Java

  Before we begin, there are simple things you need to know about Java. There are a few facts about Java you need to know from the very beginning:

  Java is not Javascript and vice-versa - Several people confuse the two programming languages because of their names. So here are the differences:

*-----------------+--------------------------------------------------------------------------------------------------------------------------------+--------------------------- --------------------------------------------------------------------+
|                 | Java                                                                                                                           | Javascript                                                                                     |
*-----------------+--------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| purpose         | General purpose                                                                                                                | Designed to be used in web browsers                                                                      |
*-----------------+--------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------+
| execution model | First you have to compile the source code and generate an executable, then you execute the executable using a virtual machine. | You execute the scripts written in Javascript directly in the browser without any compilation. |
*-----------------+--------------------------------------------------------------------------------------------------------------------------------+------------------------------------------------------------------------------------------------+

* Java is not the fastest language

  Applications written in Java can get close to the performance of applications written in C, for example, but in general the kind of optimization to high performance in C cannot be reproduced in Java.

  Nevertheless, Java is in large use in high performance computing, meaning the language offers important advantages to the solution of problems that require fast processing.

* Java is not the last language you will learn

  Don't be fooled. No programmer programs in just one language. Even programmers that are specialized in Java and only create systems that are based on Java need to know some sort of SQL, which is a language to interface with a database.

* Programming in Java for real requires a solid knowledge of object-orientation design

  Don't think you will be able to build decent Java programs without knowing what OOP (Object-Oriented Programming) is.

* Java is not finished

  New versions of Java are released once in a while to correct bugs, compatibility problems and even to change the way programmers should create their programs.

===

JDK vs JRE

  What is the differences between a JDK and a JRE?

  JRE - Java Runtime Environment - a collection of pieces of software that allows for applications written in Java to be executed. Any user who wants to execute Java programs should have a JRE installed.

  JDK - Java Development Kit - is a collection of basic tools the developers need to program in Java. The JDK contains a JRE, since programmers need to execute their applications to test them. Typically, only application developers will need to have a JDK installed.

